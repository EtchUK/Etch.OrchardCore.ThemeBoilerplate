/*  ==========================================================================
    #CAROUSEL/DEFAULT
    ========================================================================== */

@use "sass:math";

.carousel {
    display: block;
    overflow: hidden;
    position: relative;
    width: 100%;
}

/**
 * 1. Position indicators above the line effect containers.
 */
.carousel__indicators {
    bottom: $spacing-large;
    display: flex;
    left: 0;
    justify-content: center;
    margin: 0;
    padding: 0;
    position: absolute;
    width: 100%;
    z-index: 100; /* 1. */

    list-style: none;
}

.carousel__indicator {
    height: $carousel-indicator-size;
    margin-right: $spacing-default;
    width: $carousel-indicator-size;

    .btn {
        border: 0;
        height: 100%;
        padding: 0;
        width: 100%;

        background-color: var(--colorCarouselIndicator);
        border-radius: math.div($carousel-indicator-size, 2);

        &:focus,
        &:hover {
            background-color: var(--colorCarouselIndicatorFocus);
        }
    }

    &:last-child {
        margin-right: 0;
    }

    &.is-active .btn {
        background-color: var(--colorCarouselIndicatorActive);
    }
}

.carousel__next-btn {
    right: $carousel-nav-btn-x-mobile;
    transform: translateX(0) translateY(-50%) rotate(180deg);

    @include mq($from: carouselNextPreviousReposition) {
        right: $carousel-nav-btn-x;
    }
}

.carousel__previous-btn {
    left: $carousel-nav-btn-x-mobile;
    transform: translateX(0) translateY(-50%);

    @include mq($from: carouselNextPreviousReposition) {
        left: $carousel-nav-btn-x;
    }
}

/**
 * 1. Position indicators above the line effect containers.
 * 2. Animation is added to the SVG so the button hit area does not also move.
 * 3. Negative margin used on the psuedo element to increase hit area.
 */
.carousel__next-btn,
.carousel__previous-btn {
    position: absolute;
    top: 50%;
    z-index: 100; /* 1. */

    /* 2. */
    &:focus,
    &:hover {
        svg {
            animation-duration: $carousel-button-animation-duration;
            animation-iteration-count: infinite;
            animation-name: carouselButtonHover;
            animation-timing-function: ease-in-out;
            animation-fill-mode: backwards;
        }
    }

    /* 3. */
    &:after {
        bottom: $carousel-button-hit-area;
        content: '';
        left: $carousel-button-hit-area;
        position: absolute;
        right: $carousel-button-hit-area;
        top: $carousel-button-hit-area;
    }
}

.carousel__items {
    display: flex;
    flex-wrap: nowrap;
    list-style: none;
    margin: 0;
    min-width: 100%;
    padding: 0;
}

.carousel__item {
    border-radius: 0;
    display: none;
    min-width: 100%;
    position: relative;

    overflow: hidden;

    color: var(--colorWhite);

    @include mq($from: tablet) {
        grid-template-columns: repeat(6, 1fr);
    }

    &.is-active {
        display: block;
    }

    &:hover {
        .carousel__item-background img {
            transform: $carousel-item-background-scale-hover;
        }
    }
}

.carousel__item-background {
    grid-column: span 6;
    height: auto;
    margin-left: -$content-gutter-small;
    margin-right: -$content-gutter-small;
    width: auto;

    animation-name: cardPictureCarouselIntro;
    animation-duration: $carousel-item-background-intro-duration;
    animation-iteration-count: 1;

    @include mq($from: tablet) {
        margin-left: -$content-gutter;
        margin-right: -$content-gutter;
    }

    img {
        display: block;
        height: 100%;
        width: 100%;

        object-fit: cover;
        transform: $carousel-item-background-scale;
        transition: $carousel-item-background-transition;
    }
}

.carousel__item-body {
    left: $spacing-large;
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    z-index: $z-index-default;

    @include mq($from: tablet) {
        left: $carousel-item-translateX-tablet;
    }

    @include mq($from: desktopSmall) {
        left: $carousel-item-translateX-desktop-small;
    }

    @include mq($from: desktop) {
        left: $carousel-item-translateX-desktop;
    }

    @include mq($from: desktopMedium) {
        left: $carousel-item-translateX-desktop-medium;
    }

    > * {
        animation-name: cardBodyCarouselItemFade;
        animation-duration: $carousel-item-fade-duration;
        animation-iteration-count: 1;
        animation-fill-mode: forwards;
        animation-timing-function: ease-out;

        opacity: 0;

        &:nth-child(1) {
            animation-delay: $carousel-item-fade-child-1-delay;
        }

        &:nth-child(2) {
            animation-delay: $carousel-item-fade-child-2-delay;
        }

        &:nth-child(3) {
            animation-delay: $carousel-item-fade-child-3-delay;
        }
    }
}

@keyframes cardPictureCarouselIntro {
    0% {
        opacity: 0;
        filter: blur($carousel-item-background-intro-blur);
    }
    100% {
        opacity: 1;
        filter: blur(0);
    }
}

@keyframes cardBodyCarouselItemFade {
    0% {
        opacity: 0;
        transform: translateY($carousel-item-fade-translateY);
    }
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes carouselButtonHover {
    0% {
        transform: translateX(0);
    }
    50% {
        transform: translateX($carousel-button-hover-translate-x);
    }
    100% {
        transform: translateX(0);
    }
}
