@using Microsoft.AspNetCore.Identity
@using OrchardCore.Entities
@using OrchardCore.Settings
@using OrchardCore.Themes.Services
@using OrchardCore.Users
@using OrchardCore.Users.Models

@model OrchardCore.Users.ViewModels.LoginViewModel

@inject ISiteThemeService SiteThemeService
@inject SignInManager<IUser> _signInManager
@inject ISiteService _site

@{
    var userCanRegister = (await _site.GetSiteSettingsAsync()).As<RegistrationSettings>().UsersCanRegister;
    var allowResetPassword = (await _site.GetSiteSettingsAsync()).As<ResetPasswordSettings>().AllowResetPassword;
    var loginProviders = (await _signInManager.GetExternalAuthenticationSchemesAsync()).ToList();

    var returnUrl = Context.Request.Query.ContainsKey("returnUrl") ? (string)Context.Request.Query["returnUrl"] : string.Empty;

    var currentThemeName = await SiteThemeService.GetCurrentThemeNameAsync();

    RenderTitleSegments(T["Login"]);
}

<section class="section section--form-solo">
    <div class="section__content">
        <a href="@Context.Request.PathBase"><img src="/@currentThemeName/content/PlayCMS.svg" class="margin--bottom-large" alt="@T["Play CMS Logo"]" /></a>

        <form asp-controller="Account" asp-action="Login" asp-route-returnurl="@ViewData["ReturnUrl"]" class="form text--align-left" method="POST">
            @if (!ViewData.ModelState.IsValid)
            {
                <div class="form-group">
                    <p class="text--danger">Failed to login.</p>
                </div>
            }

            <div class="form-group">
                <label class="label" for="UserName">
                    @T["Username"]
                </label>
                <input class="input" id="UserName" name="UserName" type="text" autofocus tabindex="1">
            </div>

            <div class="form-group">
                <label class="label" for="Password">
                    @T["Password"]
                </label>
                <input class="input" id="Password" name="Password" type="password" tabindex="2">
            </div>

            @await RenderSectionAsync("AfterLogin", required: false)

            <button type="submit" class="btn btn--primary width-100" tabindex="3">@T["Login"]</button>

            @if (allowResetPassword)
            {
                <p class="margin--bottom-none padding--top"><a asp-controller="ResetPassword" asp-action="ForgotPassword" asp-area="OrchardCore.Users" class="link link--plain">@T["Forgot password?"]</a></p>
            }
        </form>
    </div>
</section>
